name: Build

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:

env:
  DOCKER_IMAGE: herculescrue/web-publication-service
  ARTIFACT_PATH: website.tar.gz
  DOWNLOAD_ARTIFACT_PATH: docker-build/website.tar.gz

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: npm install
        run: npm install
      - name: Build
        run: npm run build -- --baseHref=/ --configuration=production --prod
      - name: Create artifact
        working-directory: dist
        run: tar -zcvf ../website.tar.gz .
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: website
          path: ${{ env.ARTIFACT_PATH }}
          retention-days: 5

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: website
          path: ${{ env.DOWNLOAD_ARTIFACT_PATH }}
      
      - name: Extract artifact
        working-directory: docker-build
        run: |
          mkdir -p website
          tar -xf website.tar.gz -C website
          chmod -R a+r .
      
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./docker-build
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:latest
          cache-to: type=inline

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}